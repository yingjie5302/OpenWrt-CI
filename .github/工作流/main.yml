#
#这是自由软件，使用麻省理工学院。
# 
#版权所有 （C） 2019 P3TERX <https://p3terx.com>
#版权所有 （C） 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

名称： OpenWrt-CI

开：
  推送：
    分支机构：
      - 主人
  # 调度：
  # - cron： 0 20 * * *
  发布：
    类型： [已发布]

工作：

  build_openwrt：

    名称：构建OpenWrt固件

    运行时间：Ubuntu-latest

    如果：github.event.repository.owner.id == github.event.sender.id

    步骤：

      - 名称： 结帐
        用途：操作/checkout@v2
        与：
          参考： 大师

      - 名称： 空间清理
        环境：
          DEBIAN_FRONTEND：非交互式
        运行： |
Docker RMI 'Docker Images -Q'
sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
sudo -E apt-get -y purge Azure-CLI GHC* 祖鲁* hhvm llvm* Firefox Google* dotnet* PowerShell OpenJDK* AdoptopenJDK* MySQL* PHP* MongoDB* dotNet* Moby* Snapd* ||真
sudo -E apt-get update
sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 Subversion Flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
sudo -E apt-get -y autoremove --purge
须藤 -E apt-get clean（水道）
# sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
# ln -s /mnt/openwrt/bin ./bin
# mkdir -p ./build_dir
# ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
# ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
# ln -s /mnt/openwrt/dl ./dl
# ln -s /mnt/openwrt/feeds ./feeds
# ln -s /mnt/openwrt/staging_dir ./staging_dir
DF -H
      - 名称：更新源
        运行： |
./scripts/feeds update -a
./scripts/feeds install -a
      - 名称：生成配置文件
        运行： |
rm -f ./.config*
触摸 ./.config
          #
# 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置， 需注意缩进关系
# 例如:
cat >> .config <<EOF
CONFIG_TARGET_ramips=y
CONFIG_TARGET_ramips_mt7620=y
CONFIG_TARGET_ramips_mt7620_DEVICE_xiaomi_miwifi-r3=y
CONFIG_TARGET_IMAGES_GZIP=y
CONFIG_PACKAGE_kmod-cfg80211=y
CONFIG_PACKAGE_kmod-mac80211=y
CONFIG_PACKAGE_MAC80211_DEBUGFS=y
CONFIG_PACKAGE_MAC80211_MESH=y
CONFIG_PACKAGE_kmod-mt76-core=y
CONFIG_PACKAGE_kmod-mt76x02-common=y
CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76x2-common=y
          CONFIG_PACKAGE_kmod-rt2800-lib=y
          CONFIG_PACKAGE_kmod-rt2800-mmio=y
          CONFIG_PACKAGE_kmod-rt2800-soc=y
          CONFIG_PACKAGE_kmod-rt2x00-lib=y
          CONFIG_PACKAGE_kmod-rt2x00-mmio=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_luci-app-samba=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-zerotier=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-upnp=y
CONFIG_PACKAGE_luci-app-unblockmusic=y
CONFIG_PACKAGE_luci-app-jd-dailybonus=y
CONFIG_PACKAGE_luci-app-accesscontrol=y
CONFIG_PACKAGE_luci-app-arpbind=y
CONFIG_PACKAGE_luci-app-autoreboot=y
CONFIG_PACKAGE_luci-app-filetransfer=y
CONFIG_PACKAGE_luci-app-firewall=y
CONFIG_PACKAGE_luci-app-nlbwmon=y
CONFIG_PACKAGE_luci-app-ramfree=y
CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_OFFLOADING=y
CONFIG_PACKAGE_luci-app-ssr-plus=y
CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=y
CONFIG_PACKAGE_htop=y
CONFIG_PACKAGE_automount=y
CONFIG_PACKAGE_openssh-sftp-server=y
CONFIG_PACKAGE_luci-app-attendedsysupgrade=y
CONFIG_PACKAGE_luci-app-baidupcs-web=y
CONFIG_PACKAGE_luci-app-pppoe-relay=y
CONFIG_PACKAGE_luci-app-rp-pppoe-server=y
CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSFORWARDER=y
CONFIG_PACKAGE_luci-app-syncdial=y
CONFIG_PACKAGE_luci-app-watchcat=y
CONFIG_PACKAGE_luci-主题-材料=y
CONFIG_PACKAGE_luci-app-webadmin=y
CONFIG_PACKAGE_luci-app-uugamebooster=y
CONFIG_PACKAGE_luci-app-aria2=y
EOF学位
          #
          # ===============================================================
          # 
sed -i 's/^[ \t]*//g' ./.config
制作定义配置
      - 名称：进行下载
        运行： |
使下载 -J8 ||下载 -j1 V=s
RM -RF $（查找 ./dl/ -size -1024c）
DF -H
      - 名称：编译固件
        运行： |
make -j$（nproc） ||使 -j1 V=s
echo “============================”
回显“空间使用情况：”
echo “============================”
DF -H
echo “============================”
du -h ./ --max-depth=1
du -h /mnt/openwrt/ --max-depth=1 ||真
      - 名称：准备工件
        运行： |
mkdir -p ./artifact/firmware
mkdir -p ./artifact/package
mkdir -p ./artifact/buildinfo
rm -rf $（查找 ./bin/targets/ -type d -name “packages”）
cp -rf $（查找 ./bin/targets/ -type f） ./artifact/firmware/
cp -rf $（find ./bin/packages/ -type f -name “*.ipk”） ./artifact/package/
cp -rf $（find ./bin/targets/ -type f -name “*.buildinfo” -o -name “*.manifest”） ./artifact/buildinfo/
      - 名称：交付构建信息
        用途：操作/上传artifact@v2
        与：
          姓名： OpenWrt_buildinfo
          路径： ./artifact/buildinfo/

      - 名称：交付包裹
        用途：操作/上传artifact@v2
        与：
          姓名： OpenWrt_package
          路径： ./工件/包/

      - 名称：交付固件
        用途：操作/上传artifact@v2
        与：
          姓名： OpenWrt_firmware
          路径： ./bin/targets/

      - 名称：上传发布资产
        if： github.event == 'release'
        用途：斯文斯塔罗/上传发布action@v2
        与：
          repo_token：${{ 机密。YOURTOKEN }}
          文件： ./工件/固件/*
          标签： ${{ GitHub.ref }}
          file_glob：真
